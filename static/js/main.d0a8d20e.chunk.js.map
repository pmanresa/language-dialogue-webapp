{"version":3,"sources":["App.jsx","serviceWorker.js","index.js"],"names":["HEADER_URL","SYNTHESIZE_ENDPOINT","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleContentChange","event","value","target","name","formData","state","setState","handleSliderChange","e","handleDownloadClick","isDownloading","fetch","headers","Accept","Content-Type","method","body","JSON","stringify","then","response","json","result","handlePlayClick","isPlaying","text1","text2","voice1","voice2","pitch1","pitch2","speed1","speed2","break","classes","makeStyles","theme","button","margin","spacing","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","fontSize","pitchMarks","label","speedMarks","react_default","a","createElement","Container_default","className","Form_default","Row","Group","as","Col","Label","Control","type","placeholder","onChange","rows","Row_default","Grid","container","alignItems","item","xs","Slider","defaultValue","aria-labelledby","step","min","max","marks","valueLabelDisplay","Col_default","Button","variant","color","disabled","onClick","GetAppRounded_default","PlayArrow_default","id","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0a8d20e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport Slider from '@material-ui/lab/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport GetAppRounded from '@material-ui/icons/GetAppRounded'\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport const TITLE = \"Language Dialogue Converter\";\nexport const HEADER_URL = \"http://127.0.0.1:5000/\";\nexport const SYNTHESIZE_ENDPOINT = \"synthesize/\";\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDownloading: false,\n      isPlaying: false,\n      formData: {\n        text1: '',\n        text2: '',\n        voice1: \"en-AU-Wavenet-A\", // default value\n        voice2: \"en-AU-Wavenet-A\", // default value\n        pitch1: 0,\n        pitch2: 0,\n        speed1: 100,\n        speed2: 100,\n        break: 0\n      },\n      result: \"\"\n    };\n  }\n\n  handleContentChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    let formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData\n    });\n  };\n\n  handleSliderChange = name => (e, value) => {\n    let formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData\n    });\n  };\n\n  handleDownloadClick = (event) => {\n    const formData = this.state.formData;\n    this.setState({isDownloading: true});\n    fetch(HEADER_URL + SYNTHESIZE_ENDPOINT,\n        {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          method: 'POST',\n          body: JSON.stringify(formData)\n        })\n        .then(response => response.json())\n        .then(response => {\n          this.setState({\n            result: response.result,\n            isDownloading: false\n          });\n        });\n  };\n\n  handlePlayClick = (event) => {\n    const formData = this.state.formData;\n    this.setState({isPlaying: true});\n    fetch(HEADER_URL + SYNTHESIZE_ENDPOINT,\n        {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          method: 'POST',\n          body: JSON.stringify(formData)\n        })\n        .then(response => response.json())\n        .then(response => {\n          this.setState({\n            result: response.result,\n            isPlaying: false\n          });\n        });\n  };\n\n  render() {\n    const isDownloading = this.state.isDownloading;\n    const isPlaying = this.state.isPlaying;\n    const formData = this.state.formData;\n    const result = this.state.result;\n\n    const classes = makeStyles(theme => ({\n      button: {\n        margin: theme.spacing(4),\n      },\n      leftIcon: {\n        marginRight: theme.spacing(4),\n      },\n      rightIcon: {\n        marginLeft: theme.spacing(4),\n      },\n      iconSmall: {\n        fontSize: 20,\n      },\n    }));\n\n    const pitchMarks = [\n      {\n        value: 0,\n        label: '0',\n      },\n      {\n        value: -5,\n        label: '-5',\n      },\n      {\n        value: 5,\n        label: '5',\n      }\n    ];\n\n    const speedMarks = [\n      {\n        value: 100,\n        label: '100%',\n      },\n      {\n        value: 75,\n        label: '75%',\n      },\n      {\n        value: 125,\n        label: '125%',\n      }\n    ];\n\n    const breakMarks = [\n      {\n        value: 0,\n        label: '0s',\n      },\n      {\n        value: 1,\n        label: '1s',\n      },\n      {\n        value: 2,\n        label: '2s          ',\n      }\n    ];\n\n    return (\n        <Container>\n          <div>\n            <h1 className=\"title\">{TITLE}</h1>\n          </div>\n          <div className=\"content\">\n            <Form>\n\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label>Language 1</Form.Label>\n                  <Form.Control\n                      as=\"textarea\"\n                      type=\"text\"\n                      name=\"text1\"\n                      placeholder=\"Write something here...\"\n                      value={formData.text1}\n                      onChange={this.handleContentChange}\n                      rows=\"5\"/>\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Language 2</Form.Label>\n                  <Form.Control\n                      as=\"textarea\"\n                      type=\"text\"\n                      name=\"text2\"\n                      placeholder=\"Write something here...\"\n                      value={formData.text2}\n                      onChange={this.handleContentChange}\n                      rows=\"5\"/>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label>Select Voice</Form.Label>\n                  <Form.Control\n                      as=\"select\"\n                      value={formData.voice1}\n                      name=\"voice1\"\n                      onChange={this.handleContentChange}>\n                    <option value=\"en-AU-Wavenet-A\">en-AU-A Female</option>\n                    <option value=\"en-AU-Wavenet-B\">en-AU-B Male</option>\n                    <option value=\"en-AU-Wavenet-C\">en-AU-C Female</option>\n                    <option value=\"en-AU-Wavenet-D\">en-AU-D Male</option>\n\n                    <option value=\"en-GB-Wavenet-A\">en-GB-A Female</option>\n                    <option value=\"en-GB-Wavenet-B\">en-GB-B Male</option>\n                    <option value=\"en-GB-Wavenet-C\">en-GB-C Female</option>\n                    <option value=\"en-GB-Wavenet-D\">en-GB-D Male</option>\n\n                    <option value=\"en-US-Wavenet-A\">en-US-A Male</option>\n                    <option value=\"en-US-Wavenet-B\">en-US-B Male</option>\n                    <option value=\"en-US-Wavenet-C\">en-US-C Female</option>\n                    <option value=\"en-US-Wavenet-D\">en-US-D Male</option>\n                    <option value=\"en-US-Wavenet-E\">en-US-E Female</option>\n                    <option value=\"en-US-Wavenet-F\">en-US-F Female</option>\n\n                    <option value=\"ru-RU-Wavenet-A\">ru-RU-A Female</option>\n                    <option value=\"ru-RU-Wavenet-B\">ru-RU-B Male</option>\n                    <option value=\"ru-RU-Wavenet-C\">ru-RU-C Female</option>\n                    <option value=\"ru-RU-Wavenet-D\">ru-RU-D Male</option>\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Select Voice</Form.Label>\n                  <Form.Control\n                      as=\"select\"\n                      value={formData.voice2}\n                      name=\"voice2\"\n                      onChange={this.handleContentChange}>\n                    <option value=\"en-AU-Wavenet-A\">en-AU-A Female</option>\n                    <option value=\"en-AU-Wavenet-B\">en-AU-B Male</option>\n                    <option value=\"en-AU-Wavenet-C\">en-AU-C Female</option>\n                    <option value=\"en-AU-Wavenet-D\">en-AU-D Male</option>\n\n                    <option value=\"en-GB-Wavenet-A\">en-GB-A Female</option>\n                    <option value=\"en-GB-Wavenet-B\">en-GB-B Male</option>\n                    <option value=\"en-GB-Wavenet-C\">en-GB-C Female</option>\n                    <option value=\"en-GB-Wavenet-D\">en-GB-D Male</option>\n\n                    <option value=\"en-US-Wavenet-A\">en-US-A Male</option>\n                    <option value=\"en-US-Wavenet-B\">en-US-B Male</option>\n                    <option value=\"en-US-Wavenet-C\">en-US-C Female</option>\n                    <option value=\"en-US-Wavenet-D\">en-US-D Male</option>\n                    <option value=\"en-US-Wavenet-E\">en-US-E Female</option>\n                    <option value=\"en-US-Wavenet-F\">en-US-F Female</option>\n\n                    <option value=\"ru-RU-Wavenet-A\">ru-RU-A Female</option>\n                    <option value=\"ru-RU-Wavenet-B\">ru-RU-B Male</option>\n                    <option value=\"ru-RU-Wavenet-C\">ru-RU-C Female</option>\n                    <option value=\"ru-RU-Wavenet-D\">ru-RU-D Male</option>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n\n              <Row>\n                <Form.Group as={Col}>\n                  <Form.Label>Select Pitch</Form.Label>\n                  <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item xs>\n                      <Slider\n                          defaultValue={0}\n                          aria-labelledby=\"pitch1\"\n                          step={1}\n                          min={-5}\n                          max={5}\n                          marks={pitchMarks}\n                          valueLabelDisplay=\"auto\"\n                          onChange={this.handleSliderChange(\"pitch1\")}\n                      />\n                    </Grid>\n                  </Grid>\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Select Speed</Form.Label>\n                  <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item xs>\n                      <Slider\n                          defaultValue={100}\n                          aria-labelledby=\"speed1\"\n                          step={1}\n                          min={75}\n                          max={125}\n                          marks={speedMarks}\n                          valueLabelDisplay=\"auto\"\n                          onChange={this.handleSliderChange(\"speed1\")}\n                          // valueLabelFormat={this.speedFormat}\n                      />\n                    </Grid>\n\n                  </Grid>\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Select Pitch</Form.Label>\n                  <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item xs>\n                      <Slider\n                          defaultValue={0}\n                          aria-labelledby=\"pitch2\"\n                          step={1}\n                          min={-5}\n                          max={5}\n                          marks={pitchMarks}\n                          valueLabelDisplay=\"auto\"\n                          onChange={this.handleSliderChange(\"pitch2\")}\n                      />\n                    </Grid>\n\n                  </Grid>\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Select Speed</Form.Label>\n                  <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item xs>\n                      <Slider\n                          defaultValue={100}\n                          aria-labelledby=\"speed2\"\n                          step={1}\n                          min={75}\n                          max={125}\n                          marks={speedMarks}\n                          valueLabelDisplay=\"auto\"\n                          onChange={this.handleSliderChange(\"speed2\")}\n                      />\n                    </Grid>\n                  </Grid>\n                </Form.Group>\n              </Row>\n\n              <Row>\n                <Col>\n                  <Form.Group as={Col}>\n                    <Form.Label>Select Break Time between sentences</Form.Label>\n                    <Grid container spacing={1} alignItems=\"center\">\n                      <Grid item xs>\n                        <Slider\n                            defaultValue={0}\n                            aria-labelledby=\"break\"\n                            step={0.05}\n                            min={0}\n                            max={2}\n                            marks={breakMarks}\n                            valueLabelDisplay=\"auto\"\n                            onChange={this.handleSliderChange(\"break\")}\n                        />\n                      </Grid>\n\n                    </Grid>\n                  </Form.Group>\n                </Col>\n\n                <Col>\n                </Col>\n                <Col>\n                </Col>\n\n              </Row>\n            </Form>\n\n            <Form>\n              <Row>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={isDownloading}\n                    onClick={!isDownloading ? this.handleDownloadClick : null}\n                    className={classes.button}>\n                  {\n                    isDownloading ? 'Downloading...' : 'Download MP3'\n                  }\n                  <GetAppRounded className={classes.rightIcon}>send</GetAppRounded>\n                </Button>\n              </Row>\n\n              <Row>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"default\"\n                    disabled={isPlaying}\n                    onClick={!isPlaying ? this.handlePlayClick : null}\n                    className={classes.button}>\n                  {\n                    isPlaying ? 'Pause' : 'Play Dialogue'\n                  }\n                  <PlayArrow className={classes.rightIcon}/>\n                </Button>\n              </Row>\n            </Form>\n\n          </div>\n\n          {result === \"\" ? null :\n              (<Row>\n                <Col className=\"result-container\">\n                  <h5 id=\"result\">{result}</h5>\n                </Col>\n              </Row>)\n          }\n\n        </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}